{"version":3,"sources":["components/header/Header.js","components/sectionA/SectionA.js","components/sectionB/SectionB.js","components/sectionC/SectionC.js","components/sectionD/SectionD.js","utils/API.js","page/employeeChangeForm/EmployeeChangeForm.js","components/header/DepartmentHeader.js","components/role/Role.js","page/departmentValidationForm/DepartmentValidationForm.js","components/header/FormListHeader.js","components/formList/FormList.js","page/formListPage/FormListPage.js","components/table/Table.js","page/employeeTable/EmployeeTable.js","page/existingEmpNewForm/ExistingEmpNewForm.js","page/newChangeForm/newChangeForm.js","App.js","serviceWorker.js","index.js"],"names":["HeaderOne","props","Segment","padded","vertical","Image","centered","src","size","Header","as","textAlign","title","className","mandatory","questions","phone","country","message","instruction1","instruction1A","instruction1B","instruction2","salariedChange","wagedChange","SectionA","Fragment","sectionA","style","color","name","value","employee_type","onChange","e","handleDropdown","employee_classification","position","incumbent","handleInputChange","type","employee_name","employeeId","typeOfChange","TypeOfChange","map","key","change_reasons","placeholder","effective_day","effective_month","effective_year","current_title","new_title","work_country","Countries","manageClassifications","unique","location","function","Functions","funct","department","manager","salary_cost","travel_cost","business_unit","SectionB","haypoint_current","haypoint_proposed","currency_current","currency_proposed","baseSalary_current","baseSalary_proposed","vehicle_current","vehicle_proposed","sti_current","sti_proposed","superannuationB_current","superannuationB_proposed","reward_current","reward_proposed","percentage_change","other_allowances_B","hoursB_monday","hoursB_tuesday","hoursB_wednesday","hoursB_thursday","hoursB_friday","hoursB_saturday","hoursB_sunday","total_hours_B","SectionC","sectionC","handleCurrentClassification","locationDB","agrCurrentUnique","agr","currentAgreement","id","handleProposedClassification","agrProposedUnique","proposedAgreement","classCurrentUnique","cl","currentClassification","current","classProposedUnique","proposedClassification","proposed","team_leader_allowance","leading_hand_allowance","dual_trade_allowance","other_allowances_C","work_schedule","shift","Shifts","hoursC_monday","hoursC_tuesday","hoursC_wednesday","hoursC_thursday","hoursC_friday","hoursC_saturday","hoursC_sunday","total_hours_C","SectionD","sectionD","rows","change_justification","submitted_by_name","submission_day","Days","day","submission_month","Months","month","submission_year","submitted_by_position","hr_name","hr_signature","first_approver_name","first_approver_signature","second_approver_name","second_approver_signature","payroll_number","payroll_position","hr_central_name","template","hr_central_signature","superannuation_D","payroll_name","visa_check","payroll_signature","comments","axios","get","formData","put","form","post","EmployeeChangeForm","useState","setForm","setCurrentAgreement","setProposedAgreement","setCurrentClassification","setProposedClassification","role","JSON","parse","localStorage","getItem","idLSupdate","useEffect","idLocalStorage","populateForm","API","then","res","open","data","employee_agreement_current","employee_agreement_proposed","classification_current","classification_proposed","data_visa_check","catch","err","console","log","cities","i","length","j","Agreement","updateForm","OpenClose","closeForm","openForm","target","citiesToDisplay","place","unshift","push","Set","agrCurrentDisplay","agrcurrentInDB","currentagr","agrProposedDisplay","agrProposedInDB","proposedagr","classCurrentDisplay","classCurrentInDB","Classification","currentClass","agreement","currentClassArr","classification","k","classProposedDisplay","classProposedInDB","proposedClass","proposedClassArr","Container","effective_date","previous_incumbent","selectedValue","forEach","element","item","to","Button","onClick","event","preventDefault","window","reload","class","DepartmentHeader","inverted","RoleSection","cardClick","setItem","stringify","Grid","stackable","container","columns","Column","DepartmentValidationForm","Role","FormHeader","FormTable","dbInfo","setDbInfo","EmployeeLSId","EmployeeId","populateHistoryReport","storeDbId","dbId","openStatus","closedStatus","filter","status","_id","Icon","Table","singleLine","sortable","Row","HeaderCell","Body","history","Cell","collapsing","Footer","fullWidth","colSpan","floated","icon","labelPosition","FormListHeader","FormList","TableList","searchName","setSearchName","filteredUsers","setFilterdUsers","storeEmpId","EmployeesArr","db","uniqueDirectory","originalArray","newArray","object","removeDuplicates","toLowerCase","startsWith","handleChange","aria-label","data-label","EmployeeDirectory","info","setInfo","loadTable","results","ExistingEmpNewForm","EmployeeName","NewChangeForm","App","path","exact","component","FormListPage","newChangeForm","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.66c4546c.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Segment,\n  Header,\n  Image\n} from 'semantic-ui-react'\nimport \"./HeaderStyle.css\"\n\nfunction HeaderOne(props) {\n  return (\n\n    <div>\n        <Segment  padded='very' vertical>\n            <Image centered src={'./images/hrimage3.png'} size={'tiny'} />\n            <Header as='h1' textAlign='center'>{props.title}</Header>\n\n        </Segment>\n    \n    \n    <div className=\"ui equal width padded grid container inverted\">\n      <div className=\"eight wide column\">\n        <ul className=\"bold\">\n          <li>{props.mandatory}</li>\n          <li>{props.questions}</li>\n          <li>{props.phone}</li>\n          <li>{props.country}</li>\n        </ul>\n      </div>\n      <div className=\"sixteen wide column text\"><span className=\"bold\">Definition:</span>{props.message}</div>\n      <div className=\"ten wide column\">\n        <p className=\"bold\">Instructions</p>\n        <ol className=\"instructionBox\">\n          <li>\n            {props.instruction1}\n            <ul>\n              <li>{props.instruction1A}</li>\n              <li>{props.instruction1B}</li>\n            </ul>\n          </li>\n          <li>{props.instruction2}</li>\n        </ol>\n      </div>\n      <div className=\"left floated right aligned six wide blue column\">\n        <ul className=\"bold\">\n          <li>{props.salariedChange}</li>\n          <li>{props.wagedChange}</li>\n        </ul>\n      </div>\n      </div>\n      </div>\n  )\n};\n\nexport default HeaderOne;","import React from \"react\";\nimport \"./SectionA.css\";\nimport TypeOfChange from \"./typeOfChange.json\";\nimport Functions from \"./functions.json\";\nimport Countries from \"./countries.json\";\n\nconst SectionA = (props) => {\n\n  const newPositionDisplay = () => {\n    if (props.position === \"new position\") {\n      return <div className=\"five wide column warning\">DO NOT PROCEED. Please contact HR central to arrange a Job Evaluation</div>\n    } else if (!props.position) {\n      return \"\"\n    }\n  }\n  return (\n    <React.Fragment>\n      <div className=\"ui equal width padded grid container\">\n\n        <div className=\"sixteen wide green column\">{props.sectionA}</div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\" style={{ color: \"red\" }}>\n            Please Select Employment Type to Begin\n          </div>\n          <div className=\"five wide column\">\n            <select name=\"employee_type\" value={props.employee_type} onChange={(e) => props.handleDropdown(e)}>\n              <option value=\"null\">Select...</option>\n              <option value=\"salaried\">Salaried</option>\n              <option value=\"waged\">Waged</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"five wide column\">Employee Classification</div>\n          <div className=\"five wide column\">\n            <select name=\"employee_classification\" value={props.employee_classification} onChange={(e) => props.handleDropdown(e)}>\n              <option value=\"null\">Select...</option>\n              <option value=\"permanent\">Permanent</option>\n              <option value=\"temporary\">Temporary</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">New Position / Existing Position</div>\n          <div className=\"three wide column\">\n            <select name=\"position\" value={props.position} onChange={(e) => props.handleDropdown(e)}>\n              <option value=\"null\">Select...</option>\n              <option value=\"new position\">New Position</option>\n              <option value=\"existing position\">Existing Position</option>\n            </select>\n          </div>\n          {props.position && props.position === \"existing position\" ?\n            <React.Fragment>\n              <div className=\"two wide column\">Name of previous Incumbent</div>\n              <input className=\"five wide column border\" name=\"incumbent\" value={props.incumbent} onChange={(e) => props.handleInputChange(e)}></input>\n            </React.Fragment>\n            : newPositionDisplay()}\n\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Employee Name</div>\n          <input type=\"text\" name=\"employee_name\" value={props.employee_name} className=\"ten wide column border\" onChange={(e) => props.handleInputChange(e)} />\n        </div>\n        <div className=\"row\">\n          <div className=\"five wide column\">Employee ID</div>\n          <input type=\"text\" name=\"employeeId\" className=\"ten wide column border\" value={props.employeeId} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Type of Change</div>\n          <div className=\"ten wide column\">\n            <select name=\"typeOfChange\" value={props.typeOfChange} onChange={(e) => props.handleDropdown(e)}>\n              {TypeOfChange.map(type => (\n                <option value={`${type.value}`} key={type.name}>{type.name}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Reason for Change</div>\n          <input type=\"text\" name=\"change_reasons\" className=\"ten wide column border\" value={props.change_reasons} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n        {/* Because of nested objects, we need a ternary statement to render them */}\n        <div className=\"row\">\n          <div className=\"five wide column\">Effective Date</div>\n          <div className=\"one wide column\">Day</div>\n\n          <input type=\"text\" name=\"effective_day\" className=\"two wide column border\" placeholder=\"DD\" value={props.effective_day} onChange={(e) => props.handleInputChange(e)} ></input>\n\n          <div className=\"one wide column\">Month</div>\n\n          <input type=\"text\" name=\"effective_month\" className=\"two wide column border\" placeholder=\"MM\" value={props.effective_month} onChange={(e) => props.handleInputChange(e)}></input>\n\n          <div className=\"one wide column\">Year</div>\n\n          <input type=\"text\" name=\"effective_year\" className=\"two wide column border\" placeholder=\"YYYY\" value={props.effective_year} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"grey row\">\n          <div className=\"five wide column\">Not Required</div>\n          <div className=\"one wide column\">Day</div>\n          <input type=\"text\" className=\"two wide column border\" placeholder=\"DD\"></input>\n          <div className=\"one wide column\">Month</div>\n          <input type=\"text\" className=\"two wide column border\" placeholder=\"MM\"></input>\n          <div className=\"one wide column\">Year</div>\n          <input type=\"text\" className=\"two wide column border\" placeholder=\"YYYY\"></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Current Position Title</div>\n          <input type=\"text\" name=\"current_title\" className=\"ten wide column border\" value={props.current_title} onChange={(e) => props.handleInputChange(e)} ></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">New Position Title</div>\n          <input type=\"text\" name=\"new_title\" className=\"ten wide column border\" value={props.new_title} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Work Country</div>\n          <div className=\"five wide column\">\n            <select name=\"work_country\" value={props.work_country} onChange={(e) => props.handleDropdown(e)} >\n              {Countries.map(country => (\n                <option key={country.name} value={`${country.value}`}>{country.name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"two wide column\">Location</div>\n          <div className=\"four wide column\">\n            <select name=\"location\" onChange={(e) => { props.handleDropdown(e); props.manageClassifications(e) }}>\n              {props.unique.map(location => (\n                <option key={location} value={`${location}`}>{location}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Function</div>\n          <div className=\"ten wide column\">\n            <select name=\"function\" value={props.function} onChange={(e) => props.handleDropdown(e)}>\n              {Functions.map(funct => (\n                <option value={`${funct.value}`} key={funct.name}>{funct.name}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Department</div>\n          <input name=\"department\" type=\"text\" className=\"ten wide column border\" value={props.department} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Manager</div>\n          <input type=\"text\" name=\"manager\" className=\"ten wide column border\" value={props.manager} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\"></div>\n          <div className=\"two wide column\">Salary Cost Centre</div>\n\n          <input type=\"text\" name=\"salary_cost\" className=\"three wide column border\" value={props.salary_cost} onChange={(e) => props.handleInputChange(e)}></input>\n\n          <div className=\"two wide column\">Travel Cost Centre (if different)</div>\n\n          <input type=\"text\" name=\"travel_cost\" className=\"three wide column border\" value={props.travel_cost} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Business Unit</div>\n          <div className=\"five wide column\">\n            <select name=\"business_unit\" value={props.business_unit} onChange={(e) => props.handleDropdown(e)}>\n              <option value=\"null\">Select...</option>\n              <option value=\"ANZ\">ANZ</option>\n              <option value=\"Regional\">Regional</option>\n              <option value=\"Indonesia\">Indonesia</option>\n            </select>\n          </div>\n        </div>\n\n      </div>\n\n\n    </React.Fragment>\n  )\n};\n\nexport default SectionA;\n","import React from \"react\";\nimport \"./SectionB.css\"\n\nfunction SectionB(props) {\n  \n  return (\n    <div>\n      <div className=\"ui padded grid container\">\n\n        <div className=\"sixteen wide fluid centered blue column\">{props.SectionB}</div>\n        <div className=\"row\">\n          \n          <div className=\"five wide column\">\n            Hay Point\n          </div>\n          <div className=\"row\">\n            <div className=\"five wide column\">Current</div>\n            <input name=\"haypoint_current\" type=\"text\" className=\"ten wide column border\" value={ props.haypoint_current } onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n          <div className=\"one wide column\"></div>\n          <div className=\"row\">\n            <div className=\"five wide column\">Proposed</div>\n            <input type=\"text\" name=\"haypoint_proposed\" className=\"ten wide column border\" value={ props.haypoint_proposed} onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">\n            Currency\n                    </div>\n          <div className=\"row\">\n            <div className=\"five wide column\"></div>\n            \n            <input type=\"text\" name=\"currency_current\" className=\"ten wide column border\" value={props.currency_current } onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n          <div className=\"one wide column\"></div>\n          <div className=\"row\">\n            <div className=\"five wide column\"></div>\n            <input type=\"text\" name=\"currency_proposed\" className=\"ten wide column border\" value={props.currency_proposed } onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">\n            Base Salary\n          </div>\n          <div className=\"row\">\n            <div className=\"five wide column\"></div>\n            <input type=\"text\" name=\"baseSalary_current\" className=\"ten wide column border\" value={props.baseSalary_current } onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n          <div className=\"one wide column\"></div>\n          <div className=\"row\">\n            <div className=\"five wide column\"></div>\n            <input type=\"text\" name=\"baseSalary_proposed\" className=\"ten wide column border\" value={props.baseSalary_proposed } onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">\n            Motor Vehicle Allowance\n          </div>\n          <div className=\"row\">\n            <div className=\"five wide column\"></div>\n            <input type=\"text\" name=\"vehicle_current\" className=\"ten wide column border\" value={props.vehicle_current } onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n          <div className=\"one wide column\"></div>\n          <div className=\"row\">\n            <div className=\"five wide column\"></div>\n            <input type=\"text\" name=\"vehicle_proposed\" className=\"ten wide column border\" value={props.vehicle_proposed } onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">\n            Target STI %\n          </div>\n          <div className=\"row\">\n            <div className=\"five wide column\"></div>\n            <input type=\"text\" name=\"sti_current\" className=\"ten wide column border\" value={props.sti_current } onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n\n          <div className=\"one wide column\"></div>\n          <div className=\"row\">\n            <div className=\"five wide column\"></div>\n            <input type=\"text\" name=\"sti_proposed\" className=\"ten wide column border\" value={props.sti_proposed } onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">\n            Superannuation (AU Only)\n          </div>\n          <div className=\"row\">\n            <div className=\"five wide column\"></div>\n            <input type=\"text\" name=\"superannuationB_current\" className=\"ten wide column border\" value={props.superannuationB_current } onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n          <div className=\"one wide column\"></div>\n          <div className=\"row\">\n            <div className=\"five wide column\"></div>\n            <input type=\"text\" name=\"superannuationB_proposed\" className=\"ten wide column border\" value={props.superannuationB_proposed } onChange={(e)=> props.handleInputChange(e)} ></input>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">\n            Fixed Annual Reward (AU Only)\n          </div>\n          <div className=\"row\">\n            <div className=\"five wide column\"></div>\n            <input type=\"text\" name=\"reward_current\" className=\"ten wide column border\" value={props.reward_current } onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n          <div className=\"one wide column\"></div>\n          <div className=\"row\">\n            <div className=\"five wide column\"></div>\n            <input type=\"text\" name=\"reward_proposed\" className=\"ten wide column border\" value={props.reward_proposed } onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n         \n            \n            <div className=\"one wide column\"></div>\n              Percentage (%)\n            <input type=\"text\" name=\"percentage_change\" className=\"one wide column border\" value={props.percentage_change } onChange={(e)=> props.handleInputChange(e)}></input>\n          </div>\n   \n\n        <div className=\"row\">\n          <div className=\"five wide column\">Other Allowances (Please Specify)</div>\n          <input type=\"text\" name=\"other_allowances_B\" className=\"ten wide column border\" value={props.other_allowances_B } onChange={(e)=> props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\"><h3>Work Days (Waged Employees)</h3>Tick the check box for the new work days</div>\n          <div className=\"five wide column\"><h3>Hours of Work</h3>Fill-in the work per day</div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Monday</div>\n          <input type=\"text\" name=\"hoursB_monday\" className=\"five wide column border\" value={props.hoursB_monday } onChange={(e)=> props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Tuesday</div>\n          <input type=\"text\" name=\"hoursB_tuesday\" className=\"five wide column border\" value={props.hoursB_tuesday } onChange={(e)=> props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Wednesday</div>\n          <input type=\"text\" name=\"hoursB_wednesday\" className=\"five wide column border\" value={props.hoursB_wednesday } onChange={(e)=> props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Thursday</div>\n          <input type=\"text\" name=\"hoursB_thursday\" className=\"five wide column border\" value={props.hoursB_thursday } onChange={(e)=> props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Friday</div>\n          <input type=\"text\" name=\"hoursB_friday\" className=\"five wide column border\" value={props.hoursB_friday } onChange={(e)=> props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Saturday</div>\n          <input type=\"text\" name=\"hoursB_saturday\" className=\"five wide column border\" value={props.hoursB_saturday } onChange={(e)=> props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Sunday</div>\n          <input type=\"text\" name=\"hoursB_sunday\" className=\"five wide column border\" value={props.hoursB_sunday } onChange={(e)=> props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\"><h3>Total Hours Per Week</h3></div>\n          <input type=\"text\" name=\"total_hours_B\" className=\"two wide column border\" value={props.total_hours_B } onChange={(e)=> props.handleInputChange(e)}></input>\n        </div>\n\n      </div>\n\n    </div>\n  )\n};\n\nexport default SectionB;","import React from \"react\";\nimport Shifts from \"./shift.json\";\n\n\nfunction SectionC(props) {\n\n  return (\n    <div>\n      <div className=\"ui padded grid container\">\n        <div className=\"sixteen wide fluid centered teal column\">\n          {props.sectionC}\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Employment Agreement:</div>\n          <div className=\"row\">\n            <div className=\"five wide column\">Current</div>\n            <select name=\"employee_agreement_current\" className=\"ten wide column border\" onChange={(e) => props.handleCurrentClassification(e)}>\n\n              {props.work_country && props.work_country !== \"Australia\" ?\n                <option value=\"null\">N/A</option> : (props.location && props.location === props.locationDB ?\n                  props.agrCurrentUnique.map(agr => (\n                    <option value={`${agr}`} key={agr} >{agr}</option>\n                  )) :\n                  props.currentAgreement.map(agr => (\n                    <option value={`${agr.value}`} key={agr.id} >{agr.name}</option>\n                  ))\n                )\n              }\n            </select>\n          </div>\n          <div className=\"one wide column\"></div>\n          <div className=\"row\">\n            <div className=\"five wide column\">Proposed</div>\n            <select name=\"employee_agreement_proposed\" className=\"ten wide column border\" onChange={(e) => props.handleProposedClassification(e)}>\n              {props.work_country && props.work_country !== \"Australia\" ?\n                <option value=\"null\">N/A</option> : (props.location && props.location === props.locationDB ?\n                  props.agrProposedUnique.map(agr => (\n                    <option value={`${agr}`} key={agr} >{agr}</option>\n                  )) :\n                  props.proposedAgreement.map(agr => (\n                    <option value={`${agr.value}`} key={agr} >{agr.name}</option>\n                  ))\n                )\n              }\n            </select>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Classification:</div>\n          <div className=\"row\">\n            <div className=\"five wide column\">Current</div>\n\n            <select name=\"classification_current\" className=\"ten wide column border\" onChange={(e) => props.handleDropdown(e)}>\n              {props.work_country && props.work_country !== \"Australia\" ?\n                <option value=\"null\">N/A</option> :\n                (props.location && props.location === props.locationDB ?\n                  props.classCurrentUnique.map(cl => (\n                    <option value={`${cl}`} key={cl} >{cl}</option>)) :\n                  props.currentClassification.map(current => (\n                    <option value={current} key={current}>{current}</option>\n                  ))\n                )\n              }\n            </select>\n          </div>\n          <div className=\"one wide column\"></div>\n          <div className=\"row\">\n            <div className=\"five wide column\">Proposed</div>\n            <select name=\"classification_proposed\" className=\"ten wide column border\" onChange={(e) => props.handleDropdown(e)}>\n              {props.work_country && props.work_country !== \"Australia\" ?\n                <option value=\"null\">N/A</option> : (props.location && props.location === props.locationDB ?\n                  props.classProposedUnique.map(cl => (\n                    <option value={`${cl}`} key={cl} >{cl}</option>)) :\n                  props.proposedClassification.map(proposed => (\n                    <option value={proposed} key={proposed}>{proposed}</option>))\n                )}\n\n            </select>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Team Leader Allowance:</div>\n          <input\n            type=\"text\"\n            placeholder=\"Team Leader Allowance\"\n            name=\"team_leader_allowance\"\n            value={props.team_leader_allowance} onChange={(e) => props.handleInputChange(e)}\n          ></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Leading Hand Allowance:</div>\n          <input\n            type=\"text\"\n            placeholder=\"Leading Hand Allowance\"\n            name=\"leading_hand_allowance\"\n            value={props.leading_hand_allowance} onChange={(e) => props.handleInputChange(e)}\n          ></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Dual Trade Allowance:</div>\n          <input\n            type=\"text\"\n            placeholder=\"Dual Trade Allowance\"\n            name=\"dual_trade_allowance\"\n            value={props.dual_trade_allowance} onChange={(e) => props.handleInputChange(e)}\n          ></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Other Allowances:</div>\n          <input\n            type=\"text\"\n            placeholder=\"Dual Trade Allowance\"\n            name=\"other_allowances_C\"\n            value={props.other_allowances_C} onChange={(e) => props.handleInputChange(e)}\n          ></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Work Schedule:</div>\n          <div className=\"five wide column\">\n            <select name=\"work_schedule\" value={props.work_schedule} onChange={(e) => props.handleDropdown(e)}>\n              <option value=\"Day\">Day</option>\n              <option value=\"Shift\">Shift</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Shift:</div>\n          <div className=\"five wide column\">\n            <select name=\"shift\" value={props.shift} onChange={(e) => props.handleDropdown(e)}>\n              {Shifts.map(shift => (\n                <option key={shift.value} value={shift.value}>{shift.name}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">\n            <h3>Work Days (Waged Employees)</h3>Tick the check box for the new\n            work days\n          </div>\n          <div className=\"five wide column\">\n            <h3>Hours of Work</h3>Fill-in the work per day\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Monday</div>\n          <input name=\"hoursC_monday\" className=\"five wide column border\" value={props.hoursC_monday} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Tuesday</div>\n          <input name=\"hoursC_tuesday\" className=\"five wide column border\" value={props.hoursC_tuesday} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Wednesday</div>\n          <input name=\"hoursC_wednesday\" className=\"five wide column border\" value={props.hoursC_wednesday} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Thursday</div>\n          <input name=\"hoursC_thursday\" className=\"five wide column border\" value={props.hoursC_thursday} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Friday</div>\n          <input name=\"hoursC_friday\" className=\"five wide column border\" value={props.hoursC_friday} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Saturday</div>\n          <input name=\"hoursC_saturday\" className=\"five wide column border\" value={props.hoursC_saturday} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">Sunday</div>\n          <input name=\"hoursC_sunday\" className=\"five wide column border\" value={props.hoursC_sunday} onChange={(e) => props.handleInputChange(e)}></input>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"five wide column\">\n            <h3>Total Hours Per Week</h3>\n          </div>\n          <input\n            className=\"two wide column border\"\n            name=\"total_hours_C\"\n            value={props.total_hours_C} onChange={(e) => props.handleInputChange(e)}\n          ></input>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SectionC;\n","import React from \"react\";\nimport Days from \"./days.json\";\nimport Months from \"./months.json\";\n\nconst SectionD = (props) => {\n\n  return (\n    <div>\n      <div>\n        <div className=\"ui equal width padded grid container\">\n          <div className=\"sixteen wide blue column\">{props.sectionD}</div>\n        </div>\n        <div className=\"row\"></div>\n      </div>\n\n      <div>\n        <div className=\"ui segment\">\n          <div className=\"ui form\">\n            <div className=\"field\">\n              <label>Justification For Change</label>\n              <textarea rows={2} name=\"change_justification\" className=\"textarea\" value={props.change_justification} onChange={(e) => props.handleInputChange(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"ui equal width padded grid container\">\n          <div className=\"row\">\n            <label className=\"three wide column\">Submited By:</label>\n            <input type=\"text\" className=\"three wide column\" name=\"submitted_by_name\" value={props.submitted_by_name} onChange={(e) => props.handleInputChange(e)} />\n            <label className=\"one wide column\">Day</label>\n            <div className=\"one wide column\">\n              <select name=\"submission_day\" value={props.submission_day} onChange={(e) => props.handleDropdown(e)}>\n                {Days.map(day => (\n                  <option value={day.value} key={day.value}>{day.day}</option>\n                ))}\n              </select>\n            </div>\n            <label className=\"one wide column\">Month</label>\n            <div className=\"two wide column\">\n              <select name=\"submission_month\" value={props.submission_month} onChange={(e) => props.handleDropdown(e)}>\n                {Months.map(month => (\n                  <option value={month.value} key={month.value}>{month.month}</option>\n                ))}\n              </select>\n            </div>\n            <label className=\"one wide column\">Year</label>\n            <div className=\"one wide column\">\n              <input type=\"text\" name=\"submission_year\" value={props.submission_year} onChange={(e) => props.handleInputChange(e)} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <label className=\"three wide column\">Position:</label>\n            <input type=\"text\" className=\"three wide column\" name=\"submitted_by_position\" value={props.submitted_by_position} onChange={(e) => props.handleInputChange(e)} />\n          </div>\n          <div className=\"row\">\n            <p className=\"eigth wide column\">\n              **Please send completed from to HR central to begin the approval process - HR.Central.AP@o-i.com\n                        </p>\n          </div>\n          <div className=\"row\">\n            <label className=\"six wide column\">HR Manager/HR Business Partner</label>\n            <input type=\"text\" className=\"five wide column\" name=\"hr_name\" value={props.hr_name} onChange={(e) => props.handleInputChange(e)} />\n          </div>\n          <div className=\"row\">\n            <label className=\"six wide column\">Signature</label>\n            <input type=\"text\" className=\"five wide column\" name=\"hr_signature\" value={props.hr_signature} onChange={(e) => props.handleInputChange(e)} />\n          </div>\n          <div className=\"row\">\n            <label className=\"six wide column\">First Approver</label>\n            <input type=\"text\" className=\"five wide column\" name=\"first_approver_name\" value={props.first_approver_name} onChange={(e) => props.handleInputChange(e)} />\n          </div>\n          <div className=\"row\">\n            <label className=\"six wide column\">Signature</label>\n            <input type=\"text\" className=\"five wide column\" name=\"first_approver_signature\" value={props.first_approver_signature} onChange={(e) => props.handleInputChange(e)} />\n          </div>\n          <div className=\"row\">\n            <label className=\"six wide column\">Second Approver</label>\n            <input type=\"text\" className=\"five wide column\" name=\"second_approver_name\" value={props.second_approver_name} onChange={(e) => props.handleInputChange(e)} />\n          </div>\n          <div className=\"row\">\n            <label className=\"six wide column\">Signature</label>\n            <input type=\"text\" className=\"five wide column\" name=\"second_approver_signature\" value={props.second_approver_signature} onChange={(e) => props.handleInputChange(e)} />\n          </div>\n          <div className=\"row\">\n            <p className=\"seven wide column\" style={{ color: \"red\" }}>Check the HRC Check-Regional Comp Calcs Sheet and the Superannuation fund</p>\n            <div className=\"right floated column\">\n              <label>Payroll Number</label>\n              <input type=\"text\" className=\"seven wide column\" name=\"payroll_number\" value={props.payroll_number} onChange={(e) => props.handleInputChange(e)} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"seven wide column\"></div>\n            <div className=\"seven wide column\">\n              <label>Position Number</label>\n              <input type=\"text\" name=\"payroll_position\" value={props.payroll_position} onChange={(e) => props.handleInputChange(e)} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <label className=\"three wide column\">HR Central-Name</label>\n            <input type=\"text\" className=\"four wide column\" name=\"hr_central_name\" value={props.hr_central_name} onChange={(e) => props.handleInputChange(e)} />\n            <label className=\"three wide column\">Template to be used</label>\n            <input type=\"text\" className=\"four wide column\" placeholder=\"Letter Template\" name=\"template\" value={props.template} onChange={(e) => props.handleInputChange(e)} />\n          </div>\n          <div className=\"row\">\n            <label className=\"three wide column\">Signature</label>\n            <input type=\"text\" className=\"four wide column\" name=\"hr_central_signature\" value={props.hr_central_signature} onChange={(e) => props.handleInputChange(e)} />\n            <label className=\"three wide column\">Superannuation</label>\n            <div className=\"five wide column\">\n              <select name=\"superannuation_D\" value={props.superannuation_D} onChange={(e) => props.handleDropdown(e)}>\n                <option value=\"DB Fund\" >DB Fund</option>\n                <option value=\"Superannuation\" >Superannuation</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"row\">\n            <label className=\"three wide column\">Payroll-Name</label>\n            <input type=\"text\" className=\"four wide column\" name=\"payroll_name\" value={props.payroll_name} onChange={(e) => props.handleInputChange(e)} />\n            <label className=\"three wide column\">Visa</label>\n            <div className=\"two wide column\">\n              <select name=\"visa_check\" value={props.visa_check} onChange={(e) => props.handleDropdown(e)}>\n                <option value=\"Yes\">Yes</option>\n                <option value=\"No\">No</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"row\">\n            <p className=\"ten wide column\" style={{ color: \"red\" }}>Please check the employee record in SuccessFactors</p>\n          </div>\n          <div className=\"row\">\n            <label className=\"three wide column\">Signature</label>\n            <input type=\"text\" className=\"four wide column\" name=\"payroll_signature\" value={props.payroll_signature} onChange={(e) => props.handleInputChange(e)} />\n            <label className=\"three wide column\">Comments</label>\n            <textarea rows={2} className=\"textarea\" name=\"comments\" value={props.comments} onChange={(e) => props.handleDropdown(e)} />\n          </div>\n        </div>\n      </div>\n    </div >\n  )\n}\n\nexport default SectionD;\n","import axios from \"axios\";\n\n\nexport default {\n    findById: function (id) {\n        return axios.get(`/api/changeform/${id}`);\n    },\n    update: function (id, formData) {\n        return axios.put(`/api/changeform/${id}`, formData);\n    },\n    create: function (formData) {\n        return axios.post(\"/api/newchangeform\", formData)\n    },\n    createExisting: function (form) {\n        return axios.post(\"/api/existingemployeenewform\", form)\n    },\n    findAll: function () {\n        return axios.get(\"/api/employeedirectory\")\n    },\n    findReport: function (id) {\n        return axios.get(`/api/formlistpage/${id}`)\n    }\n};\n","//eslint-disable-next-line\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../../components/header/Header\";\nimport SectionA from \"../../components/sectionA/SectionA\";\nimport SectionB from \"../../components/sectionB/SectionB\";\nimport SectionC from \"../../components/sectionC/SectionC\";\nimport SectionD from \"../../components/sectionD/SectionD\";\nimport API from \"../../utils/API\";\nimport { Container, Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport Countries from \"../../components/sectionA/countries.json\";\nimport Agreement from \"../../components/sectionC/agreement.json\";\nimport Classification from \"../../components/sectionC/classification.json\";\nimport \"./employeechange.css\";\n////start changes\n\nfunction EmployeeChangeForm() {\n  //Store information from database\n  const [form, setForm] = useState({});\n\n  //States for section C\n  const [currentAgreement, setCurrentAgreement] = useState([]);\n  const [proposedAgreement, setProposedAgreement] = useState([{}]);\n  const [currentClassification, setCurrentClassification] = useState([]);\n  const [proposedClassification, setProposedClassification] = useState([]);\n\n  //get Role value from localStorage to conditionally render buttons\n  const role = JSON.parse(localStorage.getItem(\"Role\"))\n\n  //Activates to retrive information from the API/DB\n  const idLSupdate = JSON.parse(localStorage.getItem(\"DBid\"))\n  useEffect(() => {\n    const idLocalStorage = JSON.parse(localStorage.getItem(\"DBid\"))\n    populateForm(idLocalStorage);\n  }, [])\n\n  const populateForm = (id) => {\n    API.findById(id)\n      .then(res => setForm({\n        open: res.data.open,\n        employee_type: res.data.employee_type,\n        employee_classification: res.data.employee_classification,\n        position: res.data.position,\n        incumbent: res.data.incumbent,\n        employee_name: res.data.employee_name,\n        employeeId: res.data.employeeId,\n        typeOfChange: res.data.typeOfChange,\n        change_reasons: res.data.change_reasons,\n        effective_day: res.data.effective_day,\n        effective_month: res.data.effective_month,\n        effective_year: res.data.effective_year,\n        current_title: res.data.current_title,\n        new_title: res.data.new_title,\n        work_country: res.data.work_country,\n        location: res.data.location,\n        function: res.data.function,\n        department: res.data.department,\n        manager: res.data.manager,\n        salary_cost: res.data.salary_cost,\n        travel_cost: res.data.travel_cost,\n        business_unit: res.data.business_unit,\n        haypoint_current: res.data.haypoint_current,\n        haypoint_proposed: res.data.haypoint_proposed,\n        currency_current: res.data.currency_current,\n        currency_proposed: res.data.currency_proposed,\n        baseSalary_current: res.data.baseSalary_current,\n        baseSalary_proposed: res.data.baseSalary_proposed,\n        vehicle_current: res.data.vehicle_current,\n        vehicle_proposed: res.data.vehicle_proposed,\n        sti_current: res.data.sti_current,\n        sti_proposed: res.data.sti_proposed,\n        superannuationB_current: res.data.superannuationB_current,\n        superannuationB_proposed: res.data.superannuationB_proposed,\n        reward_current: res.data.reward_current,\n        reward_proposed: res.data.reward_proposed,\n        percentage_change: res.data.percentage_change,\n        other_allowances_B: res.data.other_allowances_B,\n        hoursB_monday: res.data.hoursB_monday,\n        hoursB_tuesday: res.data.hoursB_tuesday,\n        hoursB_wednesday: res.data.hoursB_wednesday,\n        hoursB_thursday: res.data.hoursB_thursday,\n        hoursB_friday: res.data.hoursB_friday,\n        hoursB_saturday: res.data.hoursB_saturday,\n        hoursB_sunday: res.data.hoursB_sunday,\n        total_hours_B: res.data.total_hours_B,\n        employee_agreement_current: res.data.employee_agreement_current,\n        employee_agreement_proposed: res.data.employee_agreement_proposed,\n        classification_current: res.data.classification_current,\n        classification_proposed: res.data.classification_proposed,\n        locationDB: res.data.location,\n        team_leader_allowance: res.data.team_leader_allowance,\n        leading_hand_allowance: res.data.leading_hand_allowance,\n        dual_trade_allowance: res.data.dual_trade_allowance,\n        other_allowances_C: res.data.other_allowances_C,\n        work_schedule: res.data.work_schedule,\n        shift: res.data.shift,\n        hoursC_monday: res.data.hoursC_monday,\n        hoursC_tuesday: res.data.hoursC_tuesday,\n        hoursC_wednesday: res.data.hoursC_wednesday,\n        hoursC_thursday: res.data.hoursC_thursday,\n        hoursC_friday: res.data.hoursC_friday,\n        hoursC_saturday: res.data.hoursC_saturday,\n        hoursC_sunday: res.data.hoursC_sunday,\n        total_hours_C: res.data.total_hours_C,\n        change_justification: res.data.change_justification,\n        submitted_by_name: res.data.submitted_by_name,\n        submitted_by_position: res.data.submitted_by_position,\n        submission_day: res.data.submission_day,\n        submission_month: res.data.submission_month,\n        submission_year: res.data.submission_year,\n        hr_name: res.data.hr_name,\n        hr_signature: res.data.hr_signature,\n        first_approver_name: res.data.first_approver_name,\n        first_approver_signature: res.data.first_approver_signature,\n        second_approver_name: res.data.second_approver_name,\n        second_approver_signature: res.data.second_approver_signature,\n        hr_central_name: res.data.hr_central_name,\n        hr_central_signature: res.data.hr_central_signature,\n        payroll_name: res.data.payroll_name,\n        payroll_signature: res.data.payroll_signature,\n        payroll_number: res.data.payroll_number,\n        payroll_position: res.data.payroll_position,\n        template: res.data.template,\n        superannuation_D: res.data.superannuation_D,\n        visa_check: res.data_visa_check,\n        comments: res.data.comments,\n\n      }))\n      .catch(err => console.log(err));\n  }\n\n\n  useEffect(() => {\n    //Set only cities that have an agreement \n    const cities = [\"Adelaide\", \"Brisbane\", \"Melbourne CBD\", \"Melbourne\", \"Sydney\"];\n    for (let i = 0; i < cities.length; i++) {\n      if (form.location === cities[i]) {\n        for (let j = 0; j < cities.length; j++) {\n          if (cities[j] === form.location) {\n            setCurrentAgreement(Agreement[j]);\n            setProposedAgreement(Agreement[j])\n          }\n          if (form.location === \"Melbourne CBD\") {\n            setCurrentClassification([]);\n            setProposedClassification([])\n          }\n          if (form.work_country !== \"Australia\") {\n            setCurrentClassification([]);\n            setProposedClassification([])\n          }\n        }\n      }\n    }\n  }, [form.work_country, form.location]);\n\n  const updateForm = (id) => {\n    API.update(id, form)\n      .then(res => console.log(res.data))\n      .catch(err => console.log(err));\n  }\n\n  //Function and conditional to render open or close form button\n  const toggleFunction = (id) => {\n    if (form.open === true) {\n      closeForm(id)\n    } else {\n      openForm(id)\n    }\n  }\n  const OpenClose = form.open === true ? \"Close Form\" : \"Open Form\"\n\n  const closeForm = (id) => {\n    form.open = false\n    API.update(id, form)\n      .then(res => console.log(res.data))\n      .catch(err => console.log(err));\n  }\n  const openForm = (id) => {\n    form.open = true\n    API.update(id, form)\n      .then(res => console.log(res.data))\n      .catch(err => console.log(err));\n  }\n  //Create props for section A\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (value.length > 0) {\n      setForm({ ...form, [name]: value });\n    } else { setForm({ ...form, [name]: value }) }\n  }\n\n  const handleDropdown = (e) => {\n    const { name, value } = e.target\n    setForm({ ...form, [name]: value })\n  }\n\n  //Logic to get dropdown list display the location from the database as selected on page load\n  const citiesToDisplay = []\n  let cities = []\n  const place = form.work_country\n  for (let i = 1; i < Countries.length; i++) {\n    if (place === Countries[i].name) {\n      cities = Countries[i].cities\n    }\n  }\n  for (let j = 0; j < cities.length; j++) {\n    if (form.location === cities[j]) {\n      citiesToDisplay.unshift(cities[j])\n    }\n    citiesToDisplay.push(cities[j])\n  }\n  const unique = [...new Set(citiesToDisplay)]\n\n  ////Create props for section C\n  const manageClassifications = () => {\n    setCurrentClassification([]);\n    setProposedClassification([])\n  }\n\n  const handleCurrentClassification = (selectedValue) => {\n    //changes value of agreement current\n    const { name, value } = selectedValue.target\n    setForm({ ...form, [name]: value })\n\n    Classification.forEach(element => {\n      const item = element.agreement\n      for (var i = 0; i < item.length; i++) {\n        if (value === item[i].name) {\n          return setCurrentClassification(item[i].classification)\n        }\n      }\n    });\n  }\n\n  const handleProposedClassification = (selectedValue) => {\n    //changes value of agreement proposed\n    const { name, value } = selectedValue.target\n    setForm({ ...form, [name]: value })\n    Classification.forEach(element => {\n      const item = element.agreement\n      for (var i = 0; i < item.length; i++) {\n        if (value === item[i].name) {\n          return setProposedClassification(item[i].classification)\n        }\n      }\n    });\n  }\n\n  //Start with an empty array to push all the agreements that correspond to the group where the agreement from the DB belongs to\n  const agrCurrentDisplay = []\n  console.log(form.employee_agreement_current)\n  //We store the agreement from the database. Ternary needed to avoid load conflicts.\n  const agrcurrentInDB = form.employee_agreement_current\n  //Loop through the agreement JSON and store each agreement object to loop through that object on nested loop\n  for (let i = 0; i < Agreement.length; i++) {\n    let currentagr = Agreement[i]\n    //Loop through nested array on agreement.json looking for a match to the database info\n    for (let j = 0; j < currentagr.length; j++) {\n      //when match is found, we push it as the first element of the array\n      if (agrcurrentInDB === currentagr[j].name) {\n        agrCurrentDisplay.unshift(currentagr[j].name)\n      }\n      else {\n        agrCurrentDisplay.push(currentagr[j].name)\n      }\n\n    }\n\n  }\n  const agrCurrentUnique = [...new Set(agrCurrentDisplay)]\n\n  //end of logic\n  //Repeat the logic for agreement proposed and classificatio current and proposed\n\n  //AGREEMENT PROPOSED\n  const agrProposedDisplay = []\n  const agrProposedInDB = form.employee_agreement_proposed\n  for (let i = 0; i < Agreement.length; i++) {\n    let proposedagr = Agreement[i]\n    for (let j = 0; j < proposedagr.length; j++) {\n      if (agrProposedInDB === proposedagr[j].name) {\n        agrProposedDisplay.unshift(proposedagr[j].name)\n      } else {\n        agrProposedDisplay.push(proposedagr[j].name)\n      }\n    }\n\n  }\n\n  const agrProposedUnique = [...new Set(agrProposedDisplay)]\n  //CLASSIFICATION CURRENT\n\n  const classCurrentDisplay = []\n  const classCurrentInDB = form.classification_current\n  for (let i = 0; i < Classification.length; i++) {\n    let currentClass = Classification[i].agreement\n    for (let j = 0; j < currentClass.length; j++) {\n\n      if (currentClass[j].name === agrcurrentInDB) {\n\n        let currentClassArr = currentClass[j].classification\n        for (let k = 0; k < currentClassArr.length; k++) {\n          if (classCurrentInDB === currentClassArr[k]) {\n            classCurrentDisplay.unshift(currentClassArr[k])\n          } else {\n            classCurrentDisplay.push(currentClassArr[k])\n          }\n        }\n      }\n    }\n\n  }\n\n  const classCurrentUnique = [...new Set(classCurrentDisplay)]\n\n  //CLASSIFICATION PROPOSED\n\n  const classProposedDisplay = []\n  const classProposedInDB = form.classification_proposed\n  for (let i = 0; i < Classification.length; i++) {\n    let proposedClass = Classification[i].agreement\n\n    for (let j = 0; j < proposedClass.length; j++) {\n\n      if (proposedClass[j].name === agrProposedInDB) {\n\n        let proposedClassArr = proposedClass[j].classification\n        for (let k = 0; k < proposedClassArr.length; k++) {\n          if (classProposedInDB === proposedClassArr[k]) {\n            classProposedDisplay.unshift(proposedClassArr[k])\n          } else {\n            classProposedDisplay.push(proposedClassArr[k])\n          }\n        }\n      }\n    }\n\n  }\n\n  const classProposedUnique = [...new Set(classProposedDisplay)]\n\n\n  return (\n\n    <Container>\n      <div>\n        <form>\n          <Header\n            title=\"Employee Change Form\"\n            mandatory=\"All fields are considered mandatory\"\n            questions=\"Questions? Need Help? Contact the O-I HR Central Team\"\n            phone=\"Australia +61 3 9326 2525\"\n            country=\"New Zealand and Singapore 2525\"\n            message=\"Please use this form if an Employee is increasing / decreasing their grade and salary or classification and wage rate. For more information, please refer to the form definitions outlined on the HR Central Sharepoint\"\n            instruction1=\"Please ensure you have the following information before attempting to fill the form:\"\n            instruction1A=\"a. Organization Structure Data\"\n            instruction1B=\"b. Obtain Hay point data from HR central or Remuneration and Benefits\"\n            instruction2=\"Upon completion of this form, please submit this via HR.CENTRAL.AP@O-I.COM to initiate approvals\"\n            salariedChange=\"Salaried Change - Complete Section A, Section B and Section D\"\n            wagedChange=\"Waged Change - Complete Section A, Section C and Section D\"\n          />\n\n          <br />\n          <SectionA\n            sectionA=\"Section A | Organisational Structure\"\n            employee_type={form.employee_type}\n            employee_classification={form.employee_classification}\n            position={form.position}\n            incumbent={form.incumbent}\n            employee_name={form.employee_name}\n            employeeId={form.employeeId}\n            typeOfChange={form.typeOfChange}\n            change_reasons={form.change_reasons}\n            effective_day={form.effective_day}\n            effective_month={form.effective_month}\n            effective_year={form.effective_year}\n            current_title={form.current_title}\n            new_title={form.new_title}\n            work_country={form.work_country}\n            location={form.location}\n            function={form.function}\n            department={form.department}\n            manager={form.manager}\n            salary_cost={form.salary_cost}\n            travel_cost={form.travel_cost}\n            business_unit={form.business_unit}\n            unique={unique}\n            handleDropdown={handleDropdown}\n            handleInputChange={handleInputChange}\n            manageClassifications={manageClassifications}\n            effective_date={form.effective_date}\n          />\n          <br />\n          <SectionB\n            SectionB=\"Section B | Compensation (Salaried)\"\n            handleInputChange={handleInputChange}\n            haypoint_current={form.haypoint_current}\n            haypoint_proposed={form.haypoint_proposed}\n            currency_current={form.currency_current}\n            currency_proposed={form.currency_proposed}\n            baseSalary_current={form.baseSalary_current}\n            baseSalary_proposed={form.baseSalary_proposed}\n            vehicle_current={form.vehicle_current}\n            vehicle_proposed={form.vehicle_proposed}\n            sti_current={form.sti_current}\n            sti_proposed={form.sti_proposed}\n            superannuationB_current={form.superannuationB_current}\n            superannuationB_proposed={form.superannuationB_proposed}\n            reward_current={form.reward_current}\n            reward_proposed={form.reward_proposed}\n            percentage_change={form.percentage_change}\n            other_allowances_B={form.other_allowances_B}\n            hoursB_monday={form.hoursB_monday}\n            hoursB_tuesday={form.hoursB_tuesday}\n            hoursB_wednesday={form.hoursB_wednesday}\n            hoursB_thursday={form.hoursB_thursday}\n            hoursB_friday={form.hoursB_friday}\n            hoursB_saturday={form.hoursB_saturday}\n            hoursB_sunday={form.hoursB_sunday}\n            total_hours_B={form.total_hours_B}\n          />\n          <br />\n          <SectionC\n            sectionC=\"Section C | COMPENSATION (waged employees)\"\n            handleDropdown={handleDropdown}\n            handleInputChange={handleInputChange}\n            work_country={form.work_country}\n            location={form.location}\n            locationDB={form.locationDB}\n            team_leader_allowance={form.team_leader_allowance}\n            leading_hand_allowance={form.leading_hand_allowance}\n            dual_trade_allowance={form.dual_trade_allowance}\n            other_allowances_C={form.other_allowances_C}\n            work_schedule={form.work_schedule}\n            shift={form.shift}\n            previous_incumbent={form.previous_incumbent}\n            currentAgreement={currentAgreement}\n            proposedAgreement={proposedAgreement}\n            currentClassification={currentClassification}\n            proposedClassification={proposedClassification}\n            handleCurrentClassification={handleCurrentClassification}\n            handleProposedClassification={handleProposedClassification}\n            agrCurrentUnique={agrCurrentUnique}\n            classProposedUnique={classProposedUnique}\n            agrProposedUnique={agrProposedUnique}\n            classCurrentUnique={classCurrentUnique}\n            hoursC_monday={form.hoursC_monday}\n            hoursC_tuesday={form.hoursC_tuesday}\n            hoursC_wednesday={form.hoursC_wednesday}\n            hoursC_thursday={form.hoursC_thursday}\n            hoursC_friday={form.hoursC_friday}\n            hoursC_saturday={form.hoursC_saturday}\n            hoursC_sunday={form.hoursC_sunday}\n            total_hours_C={form.total_hours_C}\n\n          />\n          <SectionD\n            sectionD=\"Approvals - Section D\"\n            handleDropdown={handleDropdown}\n            handleInputChange={handleInputChange}\n            change_justification={form.change_justification}\n            submitted_by_name={form.submitted_by_name}\n            submitted_by_position={form.submitted_by_position}\n            submission_day={form.submission_day}\n            submission_month={form.submission_month}\n            submission_year={form.submission_year}\n            hr_name={form.hr_name}\n            hr_signature={form.hr_signature}\n            first_approver_name={form.first_approver_name}\n            first_approver_signature={form.first_approver_signature}\n            second_approver_name={form.second_approver_name}\n            second_approver_signature={form.second_approver_signature}\n            hr_central_name={form.hr_central_name}\n            hr_central_signature={form.hr_central_signature}\n            payroll_name={form.payroll_name}\n            payroll_signature={form.payroll_signature}\n            payroll_number={form.payroll_number}\n            payroll_position={form.payroll_position}\n            template={form.template}\n            superannuation_D={form.superannuation_D}\n            visa_check={form.visa_check}\n            comments={form.comments}\n\n\n          />\n          <hr></hr>\n          {role === \"payroll\" ?\n            <Container textAlign='center' className='distance'>\n\n              <Link to=\"formlistpage\"><Button size='large' centered color='violet' type=\"submit\" onClick={() => { toggleFunction(idLSupdate) }}>{OpenClose}</Button></Link>\n\n              <Button size='large' color='violet' type=\"submit\" onClick={(event) => { event.preventDefault(); updateForm(idLSupdate); window.location.reload(true) }}>Update Form</Button>\n\n              <br></br>\n              <br></br>\n              <br></br>\n            </Container>\n\n            :\n            (form.open === true\n              ?\n              <Container textAlign='center' className='distance'><button className='ui violet button big' type=\"submit\" onClick={(event) => { event.preventDefault(); updateForm(idLSupdate); window.location.reload(true) }}>Update Form</button>\n              </Container>\n              : <Container textAlign='center' className='distance'><button class=\"ui orange button huge\">Please Contact Payroll to Re-Open if changes are required</button>\n              </Container>\n\n            )\n\n\n          }\n\n\n        </form>\n      </div>\n\n    </Container>\n\n  );\n}\nexport default EmployeeChangeForm;\n","import React from \"react\";\nimport {Header} from 'semantic-ui-react';\nimport \"./DepartmentStyle.css\";\n\n\nfunction DepartmentHeader() {\n    return (\n\n\n\n\n        <div id='head' className='ui sixteen wide column padded' >\n            <br></br>\n            <div id='h3'><Header as='h2' inverted textAlign='center'>WelcomeTo</Header></div>\n            <div id='header'><Header as='h1' inverted color='violet' textAlign='center'>HR Operations</Header></div>\n        </div>\n        )\n\n\n\n\n};\n\nexport default DepartmentHeader;","import React from 'react'\nimport { Grid, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst RoleSection = () => {\n  const cardClick = (role) => {\n    localStorage.setItem(\"Role\", JSON.stringify(role));\n  }\n  \n  return (\n\n    <Grid centered stackable container columns={3}>\n      <Grid.Column>\n        <Image src='./images/manager.png' size='large' />\n        <Link to='employeedirectory'><button id='btn' className='ui violet inverted fluid button large' onClick={(e) => cardClick(e.target.value)} value='manager'>Manager</button></Link>\n      </Grid.Column>\n      <Grid.Column>\n        <Image src='./images/hrimage4.png' size='large' />\n        <Link to='employeedirectory'><button className='ui violet inverted fluid button large' onClick={(e) => cardClick(e.target.value)} value='humanResource'>Human Resource</button></Link>\n      </Grid.Column>\n      <Grid.Column>\n        <Image src='./images/payroll.png' size='large' />\n        <Link to='employeedirectory'><button className='ui violet inverted fluid button large' onClick={(e) => cardClick(e.target.value)} value='payroll'>Payroll</button></Link>\n      </Grid.Column>\n    </Grid>\n\n\n\n\n\n  )\n\n}\n\nexport default RoleSection","import React from \"react\";\nimport DepartmentHeader from \"../../components/header/DepartmentHeader\";\nimport Role from \"../../components/role/Role\";\n\n\nfunction DepartmentValidationForm() {\n    return (\n      <div>\n        <DepartmentHeader />\n\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n       \n        <Role />\n\n       \n      </div>\n    );\n  }\n  export default DepartmentValidationForm;","import React from \"react\";\nimport {\n    Header,\n} from 'semantic-ui-react'\nimport \"./formheader.css\"\n\n\nfunction FormHeader() {\n\n    //get Name from localStorage \n    const name = JSON.parse(localStorage.getItem(\"EmployeeName\"))\n    \n    return (\n\n\n        <div id='head' className='ui sixteen wide column padded' >\n            <br></br>\n            <div id='h1'><Header as='h1' inverted textAlign='center'>History Report for <span className='name'>{name}</span> </Header></div>\n\n        </div>\n\n    )\n\n\n\n\n};\n\nexport default FormHeader;","import React, { useEffect, useState } from 'react'\nimport { Icon, Button, Table } from 'semantic-ui-react'\nimport \"./formlist.css\"\nimport { Link } from 'react-router-dom'\nimport API from \"../../utils/API\"\n\nconst FormTable = () => {\n  //State to store information from the API call populateHistoryReport\n  const [dbInfo, setDbInfo] = useState([])\n\n  const EmployeeLSId = JSON.parse(localStorage.getItem(\"EmployeeId\"))\n  useEffect(() => {\n    const EmployeeId = JSON.parse(localStorage.getItem(\"EmployeeId\"))\n    populateHistoryReport(EmployeeId);\n    \n  }, [])\n\n  const populateHistoryReport = (id) => {\n    API.findReport(id)\n      .then(res => setDbInfo(res.data))\n      .catch(err => console.log(err));\n  }\n\n  //Set id in looking storage to be able to access it after update refresh\n  const storeDbId = (e) => {\n    const dbId = e.target.value\n    localStorage.setItem(\"DBid\", JSON.stringify(dbId))\n  }\n\n  //Create function to divide database in two arrays. One would contain all the objects whose status is open and the other would contain the ones with status closed\n  let openStatus = [];\n  let closedStatus = [];\n  const divideDbInfo = () => {\n    if(dbInfo.length > 0) {\n      //if key in object contains true then push object to openStatus. else push to closedStatus\n      openStatus = dbInfo.filter(status => status.open === true)\n      closedStatus = dbInfo.filter(status => status.open === false)\n\n    }\n  }\n  divideDbInfo()\n  return (\n    <React.Fragment>\n      <Link to='employeedirectory'><div><Button className='ui violet inverted' >Go To Employee Directory</Button></div></Link>\n    {openStatus.map(item => (\n      \n      <div id='formbtn'>\n      <Link to='employeechangeForm'><Button  size='large' color='violet' onClick={(e) => storeDbId(e)} value={item._id}><Icon name='file' /> Continue with Form In Progress</Button></Link>\n      </div>\n      \n    ))}\n    <Table id='tbl' singleLine sortable textAlign='center'>\n      \n      <Table.Header >\n        <Table.Row>\n          <Table.HeaderCell>Closed Forms</Table.HeaderCell>\n          <Table.HeaderCell>Employee Name</Table.HeaderCell>\n          <Table.HeaderCell>Created Date</Table.HeaderCell>\n          <Table.HeaderCell>Created By</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n    \n      <Table.Body>\n        \n        \n        {closedStatus.map(history => (\n          <Table.Row key={history._id}>\n            \n            <Table.Cell collapsing>\n              <Link to='employeechangeForm'><Button color='violet' type=\"submit\" onClick={(e) => storeDbId(e)} value={history._id}>View Form</Button></Link>\n            </Table.Cell>\n            <Table.Cell>{history.employee_name}</Table.Cell>\n            <Table.Cell>{history.submission_day} / {history.submission_month} / {history.submission_year}</Table.Cell>\n            <Table.Cell>{history.hr_name}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n\n      <Table.Footer fullWidth>\n        <Table.Row>\n          <Table.HeaderCell />\n          <Table.HeaderCell colSpan='4'>\n            <Link to='existingemployeenewform'> <Button\n              floated='right'\n              icon labelPosition='left'\n              size='small'\n              color='violet' value={EmployeeLSId}>\n\n              <Icon name='user' /> Create a New Form\n                        </Button> </Link>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Footer>\n    </Table>\n    </React.Fragment>\n\n  )\n\n}\n\nexport default FormTable;","import React from \"react\";\nimport FormListHeader from \"../../components/header/FormListHeader\";\nimport FormList from \"../../components/formList/FormList\";\nimport { Container } from \"semantic-ui-react\";\n\nfunction FormHeader() {\n\n  return (\n    <div><FormListHeader />\n      <Container>\n        <div>\n\n          <br></br>\n          <FormList />\n\n        </div>\n      </Container>\n    </div>\n  );\n}\nexport default FormHeader;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport { Table } from \"semantic-ui-react\"\nimport \"./table.css\"\n\n\nconst TableList = props => {\n  const [searchName, setSearchName] = useState(\"\");\n  const [filteredUsers, setFilterdUsers] = useState([])\n  //Stores employeeId onlocalStorage from employeedirectory to use it on formlistpage \n  const storeEmpId = (id, name) => {\n    localStorage.setItem(\"EmployeeId\", JSON.stringify(id));\n    localStorage.setItem(\"EmployeeName\", JSON.stringify(name))\n  }\n\n  //Avoid duplicates in our employee directory\n\n  let EmployeesArr = []\n  props.db.map(item => {\n    EmployeesArr.push({ employeeId: item.employeeId, employee_name: item.employee_name })\n    return EmployeesArr\n  })\n\n  const removeDuplicates = (originalArray, id) => {\n    let newArray = [];\n    let object = {};\n\n    for (var i in originalArray) {\n      object[originalArray[i][id]] = originalArray[i]\n    }\n    for (i in object) {\n      newArray.push(object[i]);\n    }\n    return newArray\n  }\n  const uniqueDirectory = removeDuplicates(EmployeesArr, \"employeeId\")\n\n  const handleChange = (e) => {\n    const { value } = e.target\n    setSearchName(value)\n    // This if statement is for when someone hits backspace and makes input empty\n    if (value === \"\") {\n      setFilterdUsers(uniqueDirectory)\n      //if start typing, we start filtering users\n    } else if (value !== \"\") {\n      const filteredUsers = uniqueDirectory.filter(data =>\n        data.employee_name.toLowerCase().startsWith(value.toLowerCase())\n      );\n      setFilterdUsers(filteredUsers);\n    }\n  };\n  return (\n    <div className='six wide column'><Link to=\"newchangeform\"><button className='ui violet button large'>Create A New Hire</button></Link>\n      {/* Search Bar */}\n      <div className=\"ui grid center aligned\">\n        <div className=\"sixteen wide column\"></div>\n        <div className=\"ui search searchbar\">\n          <div className=\"ui icon input\">\n            <input\n              className=\"prompt\"\n              type=\"text\"\n              placeholder=\"Search Employee\"\n              onChange={(e) => handleChange(e)}\n              aria-label=\"Search\"\n              name=\"search\"\n              value={searchName}\n            />\n            <i className=\"search icon\"></i>\n          </div>\n          <div className=\"results\"></div>\n        </div>\n      </div>\n\n      <Table id='tbl' textAlign='center' singleLine sortable>\n        <thead className='thead'>\n          <tr><th>Name</th>\n            <th>ID</th>\n            <th>History Reports</th>\n          </tr></thead>\n\n        <tbody>\n          {filteredUsers.length === 0 ?\n            uniqueDirectory.map(item => (\n              <tr key={item.employeeId}>\n                <td data-label=\"Name\">{item.employee_name}</td>\n                <td data-label=\"ID\">{item.employeeId}</td>\n                <td><Link to=\"formlistpage\"><button className='ui violet button small' type=\"submit\" value={item.employeeId, item.employee_name}\n                  onClick={(e) => storeEmpId(item.employeeId, item.employee_name)}>Go to Forms</button></Link></td>\n              </tr>\n            ))\n            :\n            filteredUsers.map(item => (\n              <tr key={item.employeeId}>\n                <td data-label=\"Name\">{item.employee_name}</td>\n                <td data-label=\"ID\">{item.employeeId}</td>\n                <td><Link to=\"formlistpage\"><button className='ui violet button small' type=\"submit\" value={item.employeeId, item.employee_name}\n                  onClick={(e) => storeEmpId(item.employeeId, item.employee_name)}>Go to Forms</button></Link></td>\n              </tr>\n            ))\n          }\n        </tbody>\n      </Table>\n    </div>\n  )\n};\n\nexport default TableList;\n","import React, { useEffect, useState } from \"react\";\nimport Table from \"../../components/table/Table\";\nimport DepartmentHeader from \"../../components/header/DepartmentHeader\"\nimport API from \"../../utils/API\"\nimport { Container } from \"semantic-ui-react\";\n\n\nconst EmployeeDirectory = () => {\n  const [info, setInfo] = useState([]);\n\n\n  useEffect(() => {\n    loadTable();\n  }, []);\n\n  const loadTable = () => {\n    API.findAll()\n      .then(results => setInfo(results.data))\n      .catch(err => console.log(err))\n  };\n\n  return (\n\n    <div>\n      <DepartmentHeader />\n      <Container>\n        <div>\n\n          <br></br>\n          <Table\n            name={info.employee_name}\n            employeeId={info.employeeId}\n            db={info}\n          />\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default EmployeeDirectory;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../../components/header/Header\";\nimport SectionA from \"../../components/sectionA/SectionA\";\nimport SectionB from \"../../components/sectionB/SectionB\";\nimport SectionC from \"../../components/sectionC/SectionC\";\nimport SectionD from \"../../components/sectionD/SectionD\";\nimport { Container, Button } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom'\nimport Countries from \"../../components/sectionA/countries.json\";\nimport Agreement from \"../../components/sectionC/agreement.json\";\nimport Classification from \"../../components/sectionC/classification.json\";\nimport API from \"../../utils/API\"\n\n\n\nconst ExistingEmpNewForm = () => {\n\n  //Store information from database\n  const [form, setForm] = useState({});\n\n  //States for section C\n  const [currentAgreement, setCurrentAgreement] = useState([]);\n  const [proposedAgreement, setProposedAgreement] = useState([{}]);\n  const [currentClassification, setCurrentClassification] = useState([]);\n  const [proposedClassification, setProposedClassification] = useState([]);\n\n  //Activates to retrive information from the API/DB\n  useEffect(() => {\n    const EmployeeLSId = JSON.parse(localStorage.getItem(\"EmployeeId\"));\n    const EmployeeName = JSON.parse(localStorage.getItem(\"EmployeeName\"));\n    setForm({\n      employee_type: \"\",\n      employee_classification: \"\",\n      position: \"\",\n      incumbent: \"\",\n      employee_name: EmployeeName,\n      employeeId: EmployeeLSId,\n      typeOfChange: \"\",\n      change_reasons: \"\",\n      effective_day: \"\",\n      effective_month: \"\",\n      effective_year: \"\",\n      current_title: \"\",\n      new_title: \"\",\n      work_country: \"\",\n      location: \"\",\n      function: \"\",\n      department: \"\",\n      manager: \"\",\n      salary_cost: \"\",\n      travel_cost: \"\",\n      business_unit: \"\",\n      haypoint_current: \"\",\n      haypoint_proposed: \"\",\n      currency_current: \"\",\n      currency_proposed: \"\",\n      baseSalary_current: \"\",\n      baseSalary_proposed: \"\",\n      vehicle_current: \"\",\n      vehicle_proposed: \"\",\n      sti_current: \"\",\n      sti_proposed: \"\",\n      superannuationB_current: \"\",\n      superannuationB_proposed: \"\",\n      reward_current: \"\",\n      reward_proposed: \"\",\n      percentage_change: \"\",\n      other_allowances_B: \"\",\n      hoursB_monday: \"\",\n      hoursB_tuesday: \"\",\n      hoursB_wednesday: \"\",\n      hoursB_thursday: \"\",\n      hoursB_friday: \"\",\n      hoursB_saturday: \"\",\n      hoursB_sunday: \"\",\n      total_hours_B: \"\",\n      employee_agreement_current: \"\",\n      employee_agreement_proposed: \"\",\n      classification_current: \"\",\n      classification_proposed: \"\",\n      locationDB: \"\",\n      team_leader_allowance: \"\",\n      leading_hand_allowance: \"\",\n      dual_trade_allowance: \"\",\n      other_allowances_C: \"\",\n      work_schedule: \"\",\n      shift: \"\",\n      hoursC_monday: \"\",\n      hoursC_tuesday: \"\",\n      hoursC_wednesday: \"\",\n      hoursC_thursday: \"\",\n      hoursC_friday: \"\",\n      hoursC_saturday: \"\",\n      hoursC_sunday: \"\",\n      total_hours_C: \"\",\n      change_justification: \"\",\n      submitted_by_name: \"\",\n      submitted_by_position: \"\",\n      submission_day: \"\",\n      submission_month: \"\",\n      submission_year: \"\",\n      hr_name: \"\",\n      hr_signature: \"\",\n      first_approver_name: \"\",\n      first_approver_signature: \"\",\n      second_approver_name: \"\",\n      second_approver_signature: \"\",\n      hr_central_name: \"\",\n      hr_central_signature: \"\",\n      payroll_name: \"\",\n      payroll_signature: \"\",\n      payroll_number: \"\",\n      payroll_position: \"\",\n      template: \"\",\n      superannuation_D: \"\",\n      visa_check: \"\",\n      comments: \"\"\n\n    })\n  }, [])\n\n  //Create database new entry for existing employee\n  const postForm = () => {\n    API.createExisting(form)\n      .then(res => console.log(res.data))\n      .catch(err => console.log(err));\n  }\n  \n  useEffect(() => {\n    //Set only cities that have an agreement \n    const cities = [\"Adelaide\", \"Brisbane\", \"Melbourne CBD\", \"Melbourne\", \"Sydney\"];\n    for (let i = 0; i < cities.length; i++) {\n      if (form.location === cities[i]) {\n        for (let j = 0; j < cities.length; j++) {\n          if (cities[j] === form.location) {\n            setCurrentAgreement(Agreement[j]);\n            setProposedAgreement(Agreement[j])\n          }\n          if (form.location === \"Melbourne CBD\") {\n            setCurrentClassification([]);\n            setProposedClassification([])\n          }\n          if (form.work_country !== \"Australia\") {\n            setCurrentClassification([]);\n            setProposedClassification([])\n          }\n\n        }\n      }\n    }\n  }, [form.work_country, form.location]);\n\n\n\n  //Create props for section A\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (e.length > 0) {\n      setForm({ ...form, [name]: value });\n    } else { setForm({ ...form, [name]: value }) }\n  }\n\n  const handleDropdown = (e) => {\n    const { name, value } = e.target\n    setForm({ ...form, [name]: value })\n  }\n\n  //Logic to get dropdown list display the location from the database as selected on page load\n  const citiesToDisplay = []\n  let cities = []\n  const place = form.work_country\n  for (let i = 1; i < Countries.length; i++) {\n    if (place === Countries[i].name) {\n      cities = Countries[i].cities\n    }\n  }\n  for (let j = 0; j < cities.length; j++) {\n    if (form.location === cities[j]) {\n      citiesToDisplay.unshift(cities[j])\n    }\n    citiesToDisplay.push(cities[j])\n  }\n  const unique = [...new Set(citiesToDisplay)]\n\n  ////Create props for section C\n  const manageClassifications = (e) => {\n    const { value } = e.target\n    setCurrentClassification([]);\n    setProposedClassification([]);\n    if (value === \"Select\") {\n      setCurrentAgreement([]);\n      setProposedAgreement([]);\n    }\n  }\n  const handleCurrentClassification = (selectedValue) => {\n    //changes value of agreement current\n    const { name, value } = selectedValue.target\n    setForm({ ...form, [name]: value })\n\n    Classification.forEach(element => {\n      const item = element.agreement\n      for (var i = 0; i < item.length; i++) {\n        if (value === item[i].name) {\n          return setCurrentClassification(item[i].classification)\n        }\n      }\n    });\n  }\n\n  const handleProposedClassification = (selectedValue) => {\n    //changes value of agreement proposed\n    const { name, value } = selectedValue.target\n    setForm({ ...form, [name]: value })\n    Classification.forEach(element => {\n      const item = element.agreement\n      for (var i = 0; i < item.length; i++) {\n        if (value === item[i].name) {\n          return setProposedClassification(item[i].classification)\n        }\n      }\n    });\n  }\n\n  //Start with an empty array to push all the agreements that correspond to the group where the agreement from the DB belongs to\n  const agrCurrentDisplay = []\n  //We store the agreement from the database. Ternary needed to avoid load conflicts.\n  const agrcurrentInDB = form.employee_agreement_current\n  //Loop through the agreement JSON and store each agreement object to loop through that object on nested loop\n  for (let i = 0; i < Agreement.length; i++) {\n    let currentagr = Agreement[i]\n    //Loop through nested array on agreement.json looking for a match to the database info\n    for (let j = 0; j < currentagr.length; j++) {\n      //when match is found, we push it as the first element of the array\n      if (agrcurrentInDB === currentagr[j].name) {\n        agrCurrentDisplay.unshift(currentagr[j].name)\n      }\n      else {\n        agrCurrentDisplay.push(currentagr[j].name)\n      }\n\n    }\n\n  }\n  const agrCurrentUnique = [...new Set(agrCurrentDisplay)]\n\n  //end of logic\n  //Repeat the logic for agreement proposed and classificatio current and proposed\n\n  //AGREEMENT PROPOSED\n  const agrProposedDisplay = []\n  const agrProposedInDB = form.employee_agreement_proposed\n  for (let i = 0; i < Agreement.length; i++) {\n    let proposedagr = Agreement[i]\n    for (let j = 0; j < proposedagr.length; j++) {\n      if (agrProposedInDB === proposedagr[j].name) {\n        agrProposedDisplay.unshift(proposedagr[j].name)\n      } else {\n        agrProposedDisplay.push(proposedagr[j].name)\n      }\n    }\n\n  }\n\n  const agrProposedUnique = [...new Set(agrProposedDisplay)]\n  //CLASSIFICATION CURRENT\n\n  const classCurrentDisplay = []\n  const classCurrentInDB = form.classification_current\n  for (let i = 0; i < Classification.length; i++) {\n    let currentClass = Classification[i].agreement\n    for (let j = 0; j < currentClass.length; j++) {\n\n      if (currentClass[j].name === agrcurrentInDB) {\n\n        let currentClassArr = currentClass[j].classification\n        for (let k = 0; k < currentClassArr.length; k++) {\n          if (classCurrentInDB === currentClassArr[k]) {\n            classCurrentDisplay.unshift(currentClassArr[k])\n          } else {\n            classCurrentDisplay.push(currentClassArr[k])\n          }\n        }\n      }\n    }\n\n  }\n\n  const classCurrentUnique = [...new Set(classCurrentDisplay)]\n\n  //CLASSIFICATION PROPOSED\n\n  const classProposedDisplay = []\n  const classProposedInDB = form.classification_proposed\n  for (let i = 0; i < Classification.length; i++) {\n    let proposedClass = Classification[i].agreement\n\n    for (let j = 0; j < proposedClass.length; j++) {\n\n      if (proposedClass[j].name === agrProposedInDB) {\n\n        let proposedClassArr = proposedClass[j].classification\n        for (let k = 0; k < proposedClassArr.length; k++) {\n          if (classProposedInDB === proposedClassArr[k]) {\n            classProposedDisplay.unshift(proposedClassArr[k])\n          } else {\n            classProposedDisplay.push(proposedClassArr[k])\n          }\n        }\n      }\n    }\n\n  }\n\n  const classProposedUnique = [...new Set(classProposedDisplay)]\n\n  return (\n\n    <Container>\n      <div>\n        <form>\n          <Header\n            title=\"Employee Change Form\"\n            mandatory=\"All fields are considered mandatory\"\n            questions=\"Questions? Need Help? Contact the O-I HR Central Team\"\n            phone=\"Australia +61 3 9326 2525\"\n            country=\"New Zealand and Singapore 2525\"\n            message=\"Please use this form if an Employee is increasing / decreasing their grade and salary or classification and wage rate. For more information, please refer to the form definitions outlined on the HR Central Sharepoint\"\n            instruction1=\"Please ensure you have the following information before attempting to fill the form:\"\n            instruction1A=\"a. Organization Structure Data\"\n            instruction1B=\"b. Obtain Hay point data from HR central or Remuneration and Benefits\"\n            instruction2=\"Upon completion of this form, please submit this via HR.CENTRAL.AP@O-I.COM to initiate approvals\"\n            salariedChange=\"Salaried Change - Complete Section A, Section B and Section D\"\n            wagedChange=\"Waged Change - Complete Section A, Section C and Section D\"\n          />\n\n          <br />\n          <SectionA\n            sectionA=\"Section A | Organisational Structure\"\n            employee_type={form.employee_type}\n            employee_classification={form.employee_classification}\n            position={form.position}\n            incumbent={form.incumbent}\n            employee_name={form.employee_name}\n            employeeId={form.employeeId}\n            typeOfChange={form.typeOfChange}\n            change_reasons={form.change_reasons}\n            effective_day={form.effective_day}\n            effective_month={form.effective_month}\n            effective_year={form.effective_year}\n            current_title={form.current_title}\n            new_title={form.new_title}\n            work_country={form.work_country}\n            location={form.location}\n            function={form.function}\n            department={form.department}\n            manager={form.manager}\n            salary_cost={form.salary_cost}\n            travel_cost={form.travel_cost}\n            business_unit={form.business_unit}\n            unique={unique}\n            handleDropdown={handleDropdown}\n            handleInputChange={handleInputChange}\n            manageClassifications={manageClassifications}\n          />\n          <br />\n          <SectionB\n            SectionB=\"Section B | Compensation (Salaried)\"\n            handleInputChange={handleInputChange}\n            haypoint_current={form.haypoint_current}\n            haypoint_proposed={form.haypoint_proposed}\n            currency_current={form.currency_current}\n            currency_proposed={form.currency_proposed}\n            baseSalary_current={form.baseSalary_current}\n            baseSalary_proposed={form.baseSalary_proposed}\n            vehicle_current={form.vehicle_current}\n            vehicle_proposed={form.vehicle_proposed}\n            sti_current={form.sti_current}\n            sti_proposed={form.sti_proposed}\n            superannuationB_current={form.superannuationB_current}\n            superannuationB_proposed={form.superannuationB_proposed}\n            reward_current={form.reward_current}\n            reward_proposed={form.reward_proposed}\n            percentage_change={form.percentage_change}\n            other_allowances_B={form.other_allowances_B}\n            hoursB_monday={form.hoursB_monday}\n            hoursB_tuesday={form.hoursB_tuesday}\n            hoursB_wednesday={form.hoursB_wednesday}\n            hoursB_thursday={form.hoursB_thursday}\n            hoursB_friday={form.hoursB_friday}\n            hoursB_saturday={form.hoursB_saturday}\n            hoursB_sunday={form.hoursB_sunday}\n            total_hours_B={form.total_hours_B}\n          />\n          <br />\n          <SectionC\n            sectionC=\"Section C | COMPENSATION (waged employees)\"\n            handleDropdown={handleDropdown}\n            handleInputChange={handleInputChange}\n            work_country={form.work_country}\n            location={form.location}\n            locationDB={form.locationDB}\n            team_leader_allowance={form.team_leader_allowance}\n            leading_hand_allowance={form.leading_hand_allowance}\n            dual_trade_allowance={form.dual_trade_allowance}\n            other_allowances_C={form.other_allowances_C}\n            work_schedule={form.work_schedule}\n            shift={form.shift}\n            previous_incumbent={form.previous_incumbent}\n            currentAgreement={currentAgreement}\n            proposedAgreement={proposedAgreement}\n            currentClassification={currentClassification}\n            proposedClassification={proposedClassification}\n            handleCurrentClassification={handleCurrentClassification}\n            handleProposedClassification={handleProposedClassification}\n            agrCurrentUnique={agrCurrentUnique}\n            classProposedUnique={classProposedUnique}\n            agrProposedUnique={agrProposedUnique}\n            classCurrentUnique={classCurrentUnique}\n            hoursC_monday={form.hoursC_monday}\n            hoursC_tuesday={form.hoursC_tuesday}\n            hoursC_wednesday={form.hoursC_wednesday}\n            hoursC_thursday={form.hoursC_thursday}\n            hoursC_friday={form.hoursC_friday}\n            hoursC_saturday={form.hoursC_saturday}\n            hoursC_sunday={form.hoursC_sunday}\n            total_hours_C={form.total_hours_C}\n\n          />\n          <SectionD\n            sectionD=\"Approvals - Section D\"\n            handleDropdown={handleDropdown}\n            handleInputChange={handleInputChange}\n            change_justification={form.change_justification}\n            submitted_by_name={form.submitted_by_name}\n            submitted_by_position={form.submitted_by_position}\n            submission_day={form.submission_day}\n            submission_month={form.submission_month}\n            submission_year={form.submission_year}\n            hr_name={form.hr_name}\n            hr_signature={form.hr_signature}\n            first_approver_name={form.first_approver_name}\n            first_approver_signature={form.first_approver_signature}\n            second_approver_name={form.second_approver_name}\n            second_approver_signature={form.second_approver_signature}\n            hr_central_name={form.hr_central_name}\n            hr_central_signature={form.hr_central_signature}\n            payroll_name={form.payroll_name}\n            payroll_signature={form.payroll_signature}\n            payroll_number={form.payroll_number}\n            payroll_position={form.payroll_position}\n            template={form.template}\n            superannuation_D={form.superannuation_D}\n            visa_check={form.visa_check}\n            comments={form.comments}\n\n\n          />\n          <hr></hr>\n         <Container textAlign='center' className='distance'>\n          <Link to='formlistpage'><Button className='ui violet button large' type=\"submit\" onClick={() =>  postForm()}>Save Form </Button></Link>\n          </Container>\n          <br></br>\n          <br></br>\n\n        </form>\n      </div>\n\n    </Container>\n\n  );\n}\nexport default ExistingEmpNewForm;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../../components/header/Header\";\nimport SectionA from \"../../components/sectionA/SectionA\";\nimport SectionB from \"../../components/sectionB/SectionB\";\nimport SectionC from \"../../components/sectionC/SectionC\";\nimport SectionD from \"../../components/sectionD/SectionD\";\nimport { Container, Button } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom'\nimport Countries from \"../../components/sectionA/countries.json\";\nimport Agreement from \"../../components/sectionC/agreement.json\";\nimport Classification from \"../../components/sectionC/classification.json\";\nimport API from \"../../utils/API\"\n\n\n\nconst NewChangeForm = () => {\n\n  //Store information from database\n  const [form, setForm] = useState({});\n  \n  //States for section C\n  const [currentAgreement, setCurrentAgreement] = useState([]);\n  const [proposedAgreement, setProposedAgreement] = useState([{}]);\n  const [currentClassification, setCurrentClassification] = useState([]);\n  const [proposedClassification, setProposedClassification] = useState([]);\n\n  //Activates to retrive information from the API/DB\n  useEffect(() => {\n    setForm({\n      employee_type: \"\",\n      employee_classification: \"\",\n      position: \"\",\n      incumbent: \"\",\n      employee_name: \"\",\n      employeeId: \"\",\n      typeOfChange: \"\",\n      change_reasons: \"\",\n      effective_day: \"\",\n      effective_month: \"\",\n      effective_year: \"\",\n      current_title: \"\",\n      new_title: \"\",\n      work_country: \"\",\n      location: \"\",\n      function: \"\",\n      department: \"\",\n      manager: \"\",\n      salary_cost: \"\",\n      travel_cost: \"\",\n      business_unit: \"\",\n      haypoint_current: \"\",\n      haypoint_proposed: \"\",\n      currency_current: \"\",\n      currency_proposed: \"\",\n      baseSalary_current: \"\",\n      baseSalary_proposed: \"\",\n      vehicle_current: \"\",\n      vehicle_proposed: \"\",\n      sti_current: \"\",\n      sti_proposed: \"\",\n      superannuationB_current: \"\",\n      superannuationB_proposed: \"\",\n      reward_current: \"\",\n      reward_proposed: \"\",\n      percentage_change: \"\",\n      other_allowances_B: \"\",\n      hoursB_monday: \"\",\n      hoursB_tuesday: \"\",\n      hoursB_wednesday: \"\",\n      hoursB_thursday: \"\",\n      hoursB_friday: \"\",\n      hoursB_saturday: \"\",\n      hoursB_sunday: \"\",\n      total_hours_B: \"\",\n      employee_agreement_current: \"\",\n      employee_agreement_proposed: \"\",\n      classification_current: \"\",\n      classification_proposed: \"\",\n      locationDB: \"\",\n      team_leader_allowance: \"\",\n      leading_hand_allowance: \"\",\n      dual_trade_allowance: \"\",\n      other_allowances_C: \"\",\n      work_schedule: \"\",\n      shift: \"\",\n      hoursC_monday: \"\",\n      hoursC_tuesday: \"\",\n      hoursC_wednesday: \"\",\n      hoursC_thursday: \"\",\n      hoursC_friday: \"\",\n      hoursC_saturday: \"\",\n      hoursC_sunday: \"\",\n      total_hours_C: \"\",\n      change_justification: \"\",\n      submitted_by_name: \"\",\n      submitted_by_position: \"\",\n      submission_day: \"\",\n      submission_month: \"\",\n      submission_year: \"\",\n      hr_name: \"\",\n      hr_signature: \"\",\n      first_approver_name: \"\",\n      first_approver_signature: \"\",\n      second_approver_name: \"\",\n      second_approver_signature: \"\",\n      hr_central_name: \"\",\n      hr_central_signature: \"\",\n      payroll_name: \"\",\n      payroll_signature: \"\",\n      payroll_number: \"\",\n      payroll_position: \"\",\n      template: \"\",\n      superannuation_D: \"\",\n      visa_check: \"\",\n      comments: \"\"\n      \n     })\n  }, [])\n\n\nconsole.log(form.effective_day)\n  useEffect(() => {\n    //Set only cities that have an agreement \n    const cities = [\"Adelaide\", \"Brisbane\", \"Melbourne CBD\", \"Melbourne\", \"Sydney\"];\n    for (let i = 0; i < cities.length; i++) {\n      if (form.location === cities[i]) {\n        for (let j = 0; j < cities.length; j++) {\n          if (cities[j] === form.location) {\n            setCurrentAgreement(Agreement[j]);\n            setProposedAgreement(Agreement[j])\n          }\n          if (form.location === \"Melbourne CBD\") {\n            setCurrentClassification([]);\n            setProposedClassification([])\n          }\n          if (form.work_country !== \"Australia\") {\n            setCurrentClassification([]);\n            setProposedClassification([])\n          }\n          \n        }\n      }\n    }\n  }, [form.work_country, form.location]);\n\n  //Create database new entry \n  const postNewEmployee = () => {\n    API.createExisting(form)\n      .then(res => console.log(res.data))\n      .catch(err => console.log(err));\n  }\n\n  //Create props for section A\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (e.length > 0) {\n      setForm({...form, [name]: value});\n    } else { setForm({ ...form, [name]: value}) }\n  }\n\n  const handleDropdown = (e) => {\n    const { name, value } = e.target\n    setForm({...form, [name]: value})\n  }\n  \n  //Logic to get dropdown list display the location from the database as selected on page load\n  const citiesToDisplay = []\n  let cities = []\n  const place = form.work_country \n  for (let i = 1; i < Countries.length; i++) {\n    if (place === Countries[i].name) {\n      cities = Countries[i].cities\n    }\n  }\n  for (let j = 0; j < cities.length; j++) {\n    if (form.location === cities[j]) {\n      citiesToDisplay.unshift(cities[j])\n    }\n    citiesToDisplay.push(cities[j])\n  }\n  const unique = [...new Set(citiesToDisplay)]\n\n  ////Create props for section C\n  const manageClassifications =  (e) => {\n    const { value } = e.target\n    setCurrentClassification([]);\n    setProposedClassification([]);\n    if(value === \"Select\") {\n      setCurrentAgreement([]);\n      setProposedAgreement([]);\n    }  \n  }\n  const handleCurrentClassification = (selectedValue) => {\n    //changes value of agreement current\n    const { name, value } = selectedValue.target\n    setForm({...form, [name]: value})\n    \n    Classification.forEach(element => {\n      const item = element.agreement\n      for (var i = 0; i < item.length; i++) {\n        if (value === item[i].name) {\n          return setCurrentClassification(item[i].classification)\n        }\n      }\n    });\n  }\n\n  const handleProposedClassification = (selectedValue) => {\n    //changes value of agreement proposed\n    const { name, value } = selectedValue.target\n    setForm({...form, [name]: value})\n    Classification.forEach(element => {\n      const item = element.agreement\n      for (var i = 0; i < item.length; i++) {\n        if (value === item[i].name) {\n          return setProposedClassification(item[i].classification)\n        }\n      }\n    });\n  }\n\n  //Start with an empty array to push all the agreements that correspond to the group where the agreement from the DB belongs to\n  const agrCurrentDisplay = []\n  //We store the agreement from the database. Ternary needed to avoid load conflicts.\n  const agrcurrentInDB = form.employee_agreement_current\n  //Loop through the agreement JSON and store each agreement object to loop through that object on nested loop\n  for (let i = 0; i < Agreement.length; i++) {\n    let currentagr = Agreement[i]\n    //Loop through nested array on agreement.json looking for a match to the database info\n    for (let j = 0; j < currentagr.length; j++) {\n      //when match is found, we push it as the first element of the array\n      if (agrcurrentInDB === currentagr[j].name) {\n        agrCurrentDisplay.unshift(currentagr[j].name)\n      }\n      else {\n        agrCurrentDisplay.push(currentagr[j].name)\n      }\n\n    }\n \n  }\n  const agrCurrentUnique = [...new Set(agrCurrentDisplay)]\n\n  //end of logic\n  //Repeat the logic for agreement proposed and classificatio current and proposed\n\n  //AGREEMENT PROPOSED\n  const agrProposedDisplay = []\n  const agrProposedInDB = form.employee_agreement_proposed\n  for (let i = 0; i < Agreement.length; i++) {\n    let proposedagr = Agreement[i]\n    for (let j = 0; j < proposedagr.length; j++) {\n      if (agrProposedInDB === proposedagr[j].name) {\n        agrProposedDisplay.unshift(proposedagr[j].name)\n      } else {\n        agrProposedDisplay.push(proposedagr[j].name)\n      }\n    }\n  \n  }\n\n  const agrProposedUnique = [...new Set(agrProposedDisplay)]\n  //CLASSIFICATION CURRENT\n\n  const classCurrentDisplay = []\n  const classCurrentInDB = form.classification_current\n  for (let i = 0; i < Classification.length; i++) {\n    let currentClass = Classification[i].agreement\n    for (let j = 0; j < currentClass.length; j++) {\n\n      if (currentClass[j].name === agrcurrentInDB) {\n\n        let currentClassArr = currentClass[j].classification\n        for (let k = 0; k < currentClassArr.length; k++) {\n          if (classCurrentInDB === currentClassArr[k]) {\n            classCurrentDisplay.unshift(currentClassArr[k])\n          } else {\n            classCurrentDisplay.push(currentClassArr[k])\n          }\n        }\n      }\n    }\n \n  }\n\n  const classCurrentUnique = [...new Set(classCurrentDisplay)]\n\n  //CLASSIFICATION PROPOSED\n\n  const classProposedDisplay = []\n  const classProposedInDB = form.classification_proposed\n  for (let i = 0; i < Classification.length; i++) {\n    let proposedClass = Classification[i].agreement\n\n    for (let j = 0; j < proposedClass.length; j++) {\n\n      if (proposedClass[j].name === agrProposedInDB) {\n\n        let proposedClassArr = proposedClass[j].classification\n        for (let k = 0; k < proposedClassArr.length; k++) {\n          if (classProposedInDB === proposedClassArr[k]) {\n            classProposedDisplay.unshift(proposedClassArr[k])\n          } else {\n            classProposedDisplay.push(proposedClassArr[k])\n          }\n        }\n      }\n    }\n  \n  }\n\n  const classProposedUnique = [...new Set(classProposedDisplay)]\n\n\n  return (\n\n    <Container>\n      <div>\n        <form>\n          <Header\n            title=\"New Hire Form\"\n            mandatory=\"All fields are considered mandatory\"\n            questions=\"Questions? Need Help? Contact the O-I HR Central Team\"\n            phone=\"Australia +61 3 9326 2525\"\n            country=\"New Zealand and Singapore 2525\"\n            message=\"Please use this form if an Employee is increasing / decreasing their grade and salary or classification and wage rate. For more information, please refer to the form definitions outlined on the HR Central Sharepoint\"\n            instruction1=\"Please ensure you have the following information before attempting to fill the form:\"\n            instruction1A=\"a. Organization Structure Data\"\n            instruction1B=\"b. Obtain Hay point data from HR central or Remuneration and Benefits\"\n            instruction2=\"Upon completion of this form, please submit this via HR.CENTRAL.AP@O-I.COM to initiate approvals\"\n            salariedChange=\"Salaried Change - Complete Section A, Section B and Section D\"\n            wagedChange=\"Waged Change - Complete Section A, Section C and Section D\"\n          />\n\n          <br />\n          <SectionA\n            sectionA=\"Section A | Organisational Structure\"\n            employee_type={form.employee_type}\n            employee_classification={form.employee_classification}\n            position={form.position}\n            incumbent={form.incumbent}\n            employee_name={form.employee_name}\n            employeeId={form.employeeId}\n            typeOfChange={form.typeOfChange}\n            change_reasons={form.change_reasons}\n            effective_day={form.effective_day}\n            effective_month={form.effective_month}\n            effective_year={form.effective_year}\n            current_title={form.current_title}\n            new_title={form.new_title}\n            work_country={form.work_country}\n            location={form.location}\n            function={form.function}\n            department={form.department}\n            manager={form.manager}\n            salary_cost={form.salary_cost}\n            travel_cost={form.travel_cost}\n            business_unit={form.business_unit}\n            unique={unique}\n            handleDropdown={handleDropdown}\n            handleInputChange={handleInputChange}\n            manageClassifications={manageClassifications}\n          />\n          <br />\n          <SectionB\n            SectionB=\"Section B | Compensation (Salaried)\"\n            handleInputChange={handleInputChange}\n            haypoint_current={form.haypoint_current}\n            haypoint_proposed={form.haypoint_proposed}\n            currency_current={form.currency_current}\n            currency_proposed={form.currency_proposed}\n            baseSalary_current={form.baseSalary_current}\n            baseSalary_proposed={form.baseSalary_proposed}\n            vehicle_current={form.vehicle_current}\n            vehicle_proposed={form.vehicle_proposed}\n            sti_current={form.sti_current}\n            sti_proposed={form.sti_proposed}\n            superannuationB_current={form.superannuationB_current}\n            superannuationB_proposed={form.superannuationB_proposed}\n            reward_current={form.reward_current}\n            reward_proposed={form.reward_proposed}\n            percentage_change={form.percentage_change}\n            other_allowances_B={form.other_allowances_B}\n            hoursB_monday={form.hoursB_monday}\n            hoursB_tuesday={form.hoursB_tuesday}\n            hoursB_wednesday={form.hoursB_wednesday}\n            hoursB_thursday={form.hoursB_thursday}\n            hoursB_friday={form.hoursB_friday}\n            hoursB_saturday={form.hoursB_saturday}\n            hoursB_sunday={form.hoursB_sunday}\n            total_hours_B={form.total_hours_B}\n          />\n          <br />\n          <SectionC\n            sectionC=\"Section C | COMPENSATION (waged employees)\"\n            handleDropdown={handleDropdown}\n            handleInputChange={handleInputChange}\n            work_country={form.work_country}\n            location={form.location}\n            locationDB={form.locationDB}\n            team_leader_allowance={form.team_leader_allowance}\n            leading_hand_allowance={form.leading_hand_allowance}\n            dual_trade_allowance={form.dual_trade_allowance}\n            other_allowances_C={form.other_allowances_C}\n            work_schedule={form.work_schedule}\n            shift={form.shift}\n            previous_incumbent={form.previous_incumbent}\n            currentAgreement={currentAgreement}\n            proposedAgreement={proposedAgreement}\n            currentClassification={currentClassification}\n            proposedClassification={proposedClassification}\n            handleCurrentClassification={handleCurrentClassification}\n            handleProposedClassification={handleProposedClassification}\n            agrCurrentUnique={agrCurrentUnique}\n            classProposedUnique={classProposedUnique}\n            agrProposedUnique={agrProposedUnique}\n            classCurrentUnique={classCurrentUnique}\n            hoursC_monday={form.hoursC_monday}\n            hoursC_tuesday={form.hoursC_tuesday}\n            hoursC_wednesday={form.hoursC_wednesday}\n            hoursC_thursday={form.hoursC_thursday}\n            hoursC_friday={form.hoursC_friday}\n            hoursC_saturday={form.hoursC_saturday}\n            hoursC_sunday={form.hoursC_sunday}\n            total_hours_C={form.total_hours_C}\n\n          />\n          <SectionD\n            sectionD=\"Approvals - Section D\"\n            handleDropdown={handleDropdown}\n            handleInputChange={handleInputChange}\n            change_justification={form.change_justification}\n            submitted_by_name={form.submitted_by_name}\n            submitted_by_position={form.submitted_by_position}\n            submission_day={form.submission_day}\n            submission_month={form.submission_month}\n            submission_year={form.submission_year}\n            hr_name={form.hr_name}\n            hr_signature={form.hr_signature}\n            first_approver_name={form.first_approver_name}\n            first_approver_signature={form.first_approver_signature}\n            second_approver_name={form.second_approver_name}\n            second_approver_signature={form.second_approver_signature}\n            hr_central_name={form.hr_central_name}\n            hr_central_signature={form.hr_central_signature}\n            payroll_name={form.payroll_name}\n            payroll_signature={form.payroll_signature}\n            payroll_number={form.payroll_number}\n            payroll_position={form.payroll_position}\n            template={form.template}\n            superannuation_D={form.superannuation_D}\n            visa_check={form.visa_check}\n            comments={form.comments}\n\n\n          />\n          <hr></hr>\n          <Container textAlign='center' className='distance'>\n          \n          <Link to='employeedirectory'><Button className='ui violet button large' type=\"submit\" onClick={() => postNewEmployee()}>Save Form </Button></Link>\n          </Container>\n        </form>\n      </div>\n      <br></br>\n      <br></br>\n    </Container>\n  \n  );\n}\nexport default NewChangeForm;\n","import React from \"react\";\nimport \"./App.css\";\nimport EmployeeChangeForm from \"./page/employeeChangeForm/EmployeeChangeForm\";\nimport DepartmentValidationForm from \"./page/departmentValidationForm/DepartmentValidationForm\";\nimport FormListPage from \"./page/formListPage/FormListPage\";\nimport EmployeeDirectory from \"./page/employeeTable/EmployeeTable\";\nimport ExistingEmpNewForm from \"./page/existingEmpNewForm/ExistingEmpNewForm\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport newChangeForm from \"./page/newChangeForm/newChangeForm\";\n\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <Switch>\n\n        <Route path=\"/\" exact component={DepartmentValidationForm} />\n        <Route path=\"/employeedirectory\" component={EmployeeDirectory} />\n        <Route path=\"/formlistpage\" component={FormListPage} />\n        <Route path=\"/employeechangeForm\" component={EmployeeChangeForm } />\n        <Route path=\"/newchangeform\"\n          component={newChangeForm} />\n        <Route path=\"/existingemployeenewform\"\n          component={ExistingEmpNewForm} />\n\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n//import { Button } from 'semantic-ui-react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}